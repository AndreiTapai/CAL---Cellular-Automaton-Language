package cal.essentials;

public class ConditionalNode extends AbstractNode{

    List <AbstractNode> children = new ArrayList<AbstractNode>();

    public ConditionalNode(AbstractNode expression1, AbstractNode condition, AbstractNode expression2){
    
        children.add(expression1);
        children.add(condition);
        children.add(expression2);
    }
    
   public ConditionalNode(AbstractNode expression1, AbstractNode condition, AbstractNode expression2, AbstractNode logic, AbstractNode conditional){
    
        children.add(expression1);
        children.add(condition);
        children.add(expression2);
        children.add(logic);
        children.add(conditional);
    }
    
    public ConditionalNode(String NOT, AbstractNode conditional){
    
        children.add(conditional);
    }
    
    public String toString(){
    
        String s = "";
        if (children.size() == 1){
            s += "!";
        }
        for (AbstractNode n : children){
            s += n.toString();
        }
        return s;
    }
}